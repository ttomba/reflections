Q: How did viewing a diff between two versions of a file help you see the bug that was introduced?
A: Highlighted where changes had taken pace, similar to what Google Docs does

Q: How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
A: Can see how my coding efficiency progresses

Q: What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
A: . Cons: less disciplined
. Pros: more sensical commits

Q: Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
A: In some cases, saving all files together makes much more sense because they need to be compared in parallel to be able to understand the full picture

Q: How can you use the commands git log and git diff to view the history of files?
A: git log shows you a full list of all commits, with their comments, in reverse chronological order. git diff shows you the difference between two different commits, by highlighting which lines of code were added and which were deleted. Therefore git log and git diff can be used together to pinpoint different commits and compare the differences between them

Q: How might using version control make you more confident to make changes that could break something?
A: The knowledge that I can always revert back to a previous state

Q: Now that you have your workspace set up, what do you want to try using Git for?
A: Storing different versions of code

